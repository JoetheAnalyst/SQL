-- Dany's Diner Case Study Questions


-- Q1: What is the total amount each customer spent at the restaurant?

SELECT s.customer_id ,SUM(price) Total_Amount_spent
FROM sales s
LEFT JOIN menu m
ON s.product_id = m.product_id
GROUP BY s.customer_id;


-- Q2: How many days has each customer visited the restaurant?

select customer_id, COUNT(distinct order_date)
from sales
GROUP BY customer_id;



-- Q3 What was the first item from the menu purchased by each customer?

SELECT s.customer_id, m.product_name First_Purchased_Dish, MIN(order_date) First_Visit
FROM sales s
LEFT JOIN menu m
ON s.product_id = m.product_id
GROUP BY customer_id;

-- Solved using CTE
WITH CTE AS (
SELECT customer_id, order_date, product_name,
	dense_rank() OVER(partition by s.customer_id ORDER BY order_date) rnk
FROM sales s
INNER JOIN menu m ON s.product_id = m.product_id)
SELECT customer_id, product_name, MIN(order_date) First_Order_Date
FROM CTE
GROUP BY customer_id;



-- Q4: What is the most purchased item on the menu and how many times was it purchased by all customers?

SELECT m.product_name, COUNT(order_date) Orders 
FROM sales s
LEFT JOIN menu m
ON s.product_id = m.product_id
GROUP BY m.product_name
ORDER BY COUNT(order_date) DESC
LIMIT 1;



-- Q5: Which item was the most popular for each customer?
WITH CTE AS (
SELECT customer_id, m.product_name, COUNT(order_date) Orders,
	dense_rank() OVER(partition by customer_id ORDER BY COUNT(order_date) DESC) RNK
FROM sales s
LEFT JOIN menu m
ON s.product_id = m.product_id
GROUP BY s.customer_id, m.product_name
ORDER BY COUNT(order_date) DESC
)
SELECT customer_id , product_name
FROM CTE
WHERE RNK = 1;



-- Q6: Which item was purchased first by the customer after they became a member?

WITH customers_sales_cte AS (
SELECT sales.customer_id,
	   sales.order_date,
	   members.join_date,
       menu.product_name,
       RANK() OVER(
       partition by sales.customer_id
       ORDER BY sales.order_date) as rnk 
FROM sales 
INNER JOIN members 
ON sales.customer_id = members.customer_id
INNER JOIN menu
ON sales.product_id = menu.product_id
WHERE sales.order_date > members.join_date
)
SELECT DISTINCT 
	customer_id,
    product_name,
    order_date
FROM customers_sales_cte 
WHERE rnk = 1;



-- Q7: Which item was purchased just before the customer became a member?
WITH customers_sales_cte AS (
SELECT sales.customer_id,
	   sales.order_date,
	   members.join_date,
       menu.product_name,
       RANK() OVER(
       partition by sales.customer_id
       ORDER BY sales.order_date DESC) as rnk 
FROM sales 
INNER JOIN members 
ON sales.customer_id = members.customer_id
INNER JOIN menu
ON sales.product_id = menu.product_id
WHERE sales.order_date < members.join_date
)
SELECT  customer_id,
		product_name,
		order_date
FROM customers_sales_cte
WHERE rnk = 1;



-- Q8: What is the total items and amount spent for each member before they became a member?

SELECT sales.customer_id,
		COUNT(menu.product_name) AS Number_of_Items,
        SUM(menu.price) AS Total_amount_spent
FROM sales
INNER JOIN members 
ON sales.customer_id = members.customer_id
INNER JOIN menu
ON sales.product_id = menu.product_id
WHERE members.join_date > sales.order_date
GROUP BY sales.customer_id;



-- Q9: If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

SELECT customer_id,
	SUM(CASE 
    WHEN product_name = 'Sushi' THEN price * 10 * 2
    ELSE price * 10 
    END) AS Total_Points
FROM menu
INNER JOIN sales
ON menu.product_id = sales.product_id
GROUP BY customer_id;


-- Q10: In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi 
--  how many points do customer A and B have at the end of January?

SELECT sales.customer_id,
	SUM(CASE
		WHEN sales.order_date BETWEEN members.join_date AND DATE_ADD(members.join_date, INTERVAL 6 DAY) THEN price * 10 * 2
        WHEN menu.product_name = 'Sushi' THEN price * 10 * 2
		ELSE price * 10
        END ) AS Total_Points
FROM sales
INNER JOIN members 
ON sales.customer_id = members.customer_id
INNER JOIN menu
ON sales.product_id = menu.product_id
WHERE sales.order_date < '2021-01-31'
GROUP BY sales.customer_id;

